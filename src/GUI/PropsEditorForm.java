/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Data.Props;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import java.io.File;    
import javax.swing.JOptionPane;

/**
 *
 * @author timjl
 */
public class PropsEditorForm extends javax.swing.JDialog {
    private DefaultComboBoxModel phaseList = new DefaultComboBoxModel ();
    Props props;
    /**
     * Creates new form propsEditor
     */
    public PropsEditorForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        commitButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dbLocationText = new javax.swing.JTextField();
        chooseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        turnText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        phaseCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        commitButton.setText("Commit");
        commitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Database Location");

        chooseButton.setText("Choose...");
        chooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Turn");

        turnText.setText("0");
        turnText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnTextActionPerformed(evt);
            }
        });

        jLabel3.setText("Phase");

        phaseCombo.setModel(phaseList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(commitButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(closeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dbLocationText, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(turnText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phaseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(87, 87, 87)))
                        .addGap(10, 10, 10)
                        .addComponent(chooseButton)))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dbLocationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(turnText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(phaseCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commitButton)
                    .addComponent(closeButton))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void turnTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_turnTextActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            props = new Props();
            
            int chosen = -1;
            int turn = props.getTurn();
            turnText.setText("" + turn);
            
            Props.Phase phase = props.getPhase();
            
            dbLocationText.setText(props.getDatabaseDetails());
            
            Props.Phase [] phases = Props.Phase.values();
            
            for (int i = 0; i < phases.length; i++) {
                switch (phases[i]) {
                    case ORDER:
                        phaseList.addElement("Order");
                        if (phase == phases[i]) {
                            chosen = i;
                        }
                    break;
                        
                        
                    case BUILD:
                        phaseList.addElement("Build");
                        if (phase == phases[i]) {
                            chosen = i;
                        }
                    break;
                        
                    case RETREAT:
                        phaseList.addElement("Retreat");
                        if (phase == phases[i]) {
                            chosen = i;
                        }
                    break;
                }
                
                phaseCombo.setSelectedIndex(i);
            }
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(PropsEditorForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_formWindowOpened

    private void chooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(props.getDatabaseDetails()));
        
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            dbLocationText.setText( fileChooser.getSelectedFile().getPath());
            
        }

    }//GEN-LAST:event_chooseButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void commitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitButtonActionPerformed
        boolean good = true;
        File f = new File (dbLocationText.getText());
        
        if (!f.exists()) {
            good = false;
            JOptionPane.showMessageDialog(this, "Invalid database location", "Error", JOptionPane.ERROR_MESSAGE);
            dbLocationText.requestFocusInWindow();
        }
        
        String turnStr = turnText.getText();
        int turn = 1;
        
        try {
            turn = Integer.parseInt(turnStr);
            
            if (turn < 1) {
                good = false;
                JOptionPane.showMessageDialog(this, "Invalid turn number", "Error", JOptionPane.ERROR_MESSAGE);
                turnText.requestFocusInWindow();
            }
            
        } catch (NumberFormatException ex) {
            good = false;
            JOptionPane.showMessageDialog(this, "Invalid turn number", "Error", JOptionPane.ERROR_MESSAGE);
            turnText.requestFocusInWindow();
        }
        
        if (phaseCombo.getSelectedIndex() == -1 ) {
            good = false;
            JOptionPane.showMessageDialog(this, "Please select a phase", "Error", JOptionPane.ERROR_MESSAGE);
            phaseCombo.requestFocusInWindow();
        }
        
        if (good){
            try {
                props.setTurn(turn);
                props.setDatabaseDetails(dbLocationText.getText());
                
                switch (phaseCombo.getSelectedIndex()) {
                    case 0:
                        props.setPhase(Props.Phase.ORDER);
                    break;
                    
                    case 1:
                        props.setPhase(Props.Phase.RETREAT);
                    break;
                    
                    case 2:
                        props.setPhase(Props.Phase.BUILD);
                    break;
                    
                }
                
                JOptionPane.showMessageDialog(this, "Properties saved successfully", "success", JOptionPane.PLAIN_MESSAGE);
                
            } catch (IOException ex) {
                Logger.getLogger(PropsEditorForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_commitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PropsEditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PropsEditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PropsEditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PropsEditorForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PropsEditorForm dialog = new PropsEditorForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton commitButton;
    private javax.swing.JTextField dbLocationText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> phaseCombo;
    private javax.swing.JTextField turnText;
    // End of variables declaration//GEN-END:variables
}
