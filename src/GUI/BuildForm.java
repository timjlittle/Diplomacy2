/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;


import Data.DataAccessException;
import Logic.*;
import static java.lang.Math.abs;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author timjl
 */
public class BuildForm extends javax.swing.JDialog {

    Game gameDetails;
    Player player;
    int maxBuilds;
    public enum BuildMode {BUILD, DISBAND, EVEN};
    private BuildMode mode = BuildMode.EVEN;
    
    DefaultListModel availableModel = new DefaultListModel();
    DefaultListModel ordersModel = new DefaultListModel();
    
    /**
     * Creates new form BuildForm
     */
    public BuildForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ordersListBox = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        availableListBox = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        selectButton = new javax.swing.JButton();
        deselctButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        commitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        ordersListBox.setModel(ordersModel);
        ordersListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(ordersListBox);

        availableListBox.setModel(availableModel);
        availableListBox.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        availableListBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                availableListBoxMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(availableListBox);

        jLabel1.setText("Available Supply Centers");

        jLabel2.setText("Existing Buld Orders");

        selectButton.setText(">>");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        deselctButton.setText("<<");
        deselctButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deselctButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleLabel.setText("Build instructions for");

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        commitBtn.setText("Commit");
        commitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(commitBtn)
                                .addGap(27, 27, 27)
                                .addComponent(closeButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                                .addComponent(selectButton)
                                                .addGap(18, 18, 18))
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(deselctButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))))
                        .addGap(55, 55, 55))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(selectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deselctButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeButton)
                    .addComponent(commitBtn))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void availableListBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_availableListBoxMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_availableListBoxMouseClicked

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        
        if (availableListBox.getSelectedIndex() > -1 && ordersModel.getSize() < abs(maxBuilds) ) {
            Object o = availableModel.get(availableListBox.getSelectedIndex());

            availableModel.remove(availableListBox.getSelectedIndex());
            
            if (mode == BuildMode.BUILD) {
                Region r = (Region)o;
                Border border;
                Unit.UnitType unitType = Unit.UnitType.ARMY;
                
                ArrayList borders = r.getBorders();
                
                if (borders.size() > 1){
                    Object options [] = new Object [borders.size()];
                    for (int x = 0; x < borders.size(); x++) {
                        options[x] = borders.get(x);
                    }
                    
                    border = (Border)JOptionPane.showInputDialog(null, "Multiple Coasts", "Please select coast", JOptionPane.QUESTION_MESSAGE, null, options, options[0] );
                } else {
                    border = (Border)borders.get(0);
                }
                              
                if (border.getType() == Border.BorderType.COAST) {
                    String options[] = {"Army", "Fleet"};
                    String choice = (String)JOptionPane.showInputDialog(this, "Choose unit type", "Army or Fleet", JOptionPane.QUESTION_MESSAGE, null, options, options[0] );
                    
                    if (choice.equals("Fleet")) {
                        unitType = Unit.UnitType.FLEET;
                    }
                } 
                
                Unit unit = new Unit (unitType, border, player.getPlayerId(), false);
                ordersModel.addElement (unit);
                
            } else {
                
                ordersModel.addElement(o);
            }
            
            commitBtn.setEnabled(true);
            closeButton.setText ("Abandon");
        }
    }//GEN-LAST:event_selectButtonActionPerformed

    /**
     * 
     * @param evt 
     */
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        boolean discard = true;
        
        if (ordersModel.size() > 0){
            if (JOptionPane.showConfirmDialog(this, "Are you sure?", "Abandon orders?", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) != JOptionPane.OK_OPTION){
                discard = false;
            }
        }
        
        if (discard) {
            this.dispose();
        }
    }//GEN-LAST:event_closeButtonActionPerformed

    private void deselctButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deselctButtonActionPerformed
        
        if (ordersListBox.getSelectedIndex() >= 0){
            Unit unit = (Unit)ordersModel.get(ordersListBox.getSelectedIndex());
            
            if (mode == BuildMode.BUILD) {
                
                Region r = unit.getPosition().getRegion();
                
                availableModel.addElement(r);
                
                
            } else {
                availableModel.addElement(unit);
            }
            
            ordersModel.remove(ordersListBox.getSelectedIndex());
            
            if (ordersModel.size() == 0){
                commitBtn.setEnabled(false);
                closeButton.setText ("Close");
            }
        }
    }//GEN-LAST:event_deselctButtonActionPerformed

    private void commitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitBtnActionPerformed
        try {
            gameDetails.resolveBuilds(ordersModel.toArray(), mode);
        } catch (DataAccessException ex) {
            Logger.getLogger(BuildForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error resolving order", "ERROR", JOptionPane.ERROR_MESSAGE);             
        }
    }//GEN-LAST:event_commitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuildForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuildForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuildForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuildForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuildForm().setVisible(true);
            }
        });
    }

    public void initialiseForm (Game g, Player curPlayer) {
        player = curPlayer;
        gameDetails = g;
        
        maxBuilds = player.getBuildCount();
        
        commitBtn.setEnabled(false);
        
        if (maxBuilds == 0){
            
            JOptionPane.showMessageDialog(this,
                    "No need to build or remove",
                    "Attention!",
                    JOptionPane.WARNING_MESSAGE);
            
            this.dispose();
        }
        
        availableModel.removeAllElements();
        ordersModel.removeAllElements();
        
        if (maxBuilds > 0){
            mode = BuildMode.BUILD;
            titleLabel.setText ("Build order for " + player);
                    

            int counter = 0;
            for (Region r : player.getSupplyCenters()){
                if (!r.isOccupied() && r.getOwnerId() == player.getPlayerId() && player.isHomeRegion(r.getRegionCode())){
                    availableModel.add(counter, r);
                    counter++;
                }
            }
            
        }
        
        if (maxBuilds < 0){
            mode = BuildMode.DISBAND;
                        
            jLabel1.setText("Available units");
            
            jLabel2.setText ("Selected to be disbanded");
            titleLabel.setText("Disband " + (maxBuilds * -1) + " pieces");
            
            int counter = 0;
            for (Unit u : player.getUnits()){
                availableModel.add(counter, u);
                counter++;
            }
            
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> availableListBox;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton commitBtn;
    private javax.swing.JButton deselctButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> ordersListBox;
    private javax.swing.JButton selectButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
